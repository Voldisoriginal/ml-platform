# docker-compose.yml
version: '3.8'

services:
  web:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - my_network

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://user:password@db:5432/dbname
      - DOCKER_HOST=unix:///var/run/docker.sock  # Explicitly set DOCKER_HOST
    depends_on:
      #  Remove dependency on docker:dind
      redis:
        condition: service_started
      db:
        condition: service_started
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./models:/app/models
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - my_network
    deploy:
      restart_policy:
        condition: on-failure
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A main:celery worker -l info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://user:password@db:5432/dbname
      # Remove DOCKER_HOST
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_started
      # Remove docker:dind dependency
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./models:/app/models
    networks:
      - my_network
    deploy:
      restart_policy:
        condition: on-failure

  redis:
    image: "redis:alpine"
    networks:
      - my_network
    deploy:
      restart_policy:
        condition: on-failure

  db:
    image: "postgres:13"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network
    deploy:
      restart_policy:
        condition: on-failure

  #  Remove docker:dind service entirely.

volumes:
  postgres_data:
networks:
  my_network:
